{"version":3,"sources":["components/glitch/Glitch.js","components/intro/Intro.js","App.js","Footer.js","serviceWorker.js","index.js"],"names":["Glitch","props","context","AOS","init","refresh","to","className","id","data-aos","data-aos-delay","data-aos-duration","data-aos-anchor-placement","src","process","alt","React","Component","Intro","App","document","addEventListener","window","location","hash","documentElement","scrollTop","body","Footer","href","target","rel","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8154a2af.chunk.js","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport \"./style.css\";\n\nclass Glitch extends React.Component { \n    constructor(props, context) { \n      super(props, context); \n      AOS.init(); \n    } \n    componentWillReceiveProps (){ \n      AOS.refresh(); \n    } \n\n    render() {\n        return (\n        <Router>\n            \n        <div>\n\n        <Link to=\"#introduction\">\n\n            <div className=\"screen glitch\" id=\"welcome\">\n\n                <div\n                    data-aos=\"fade\"\n                    data-aos-delay=\"250\"\n                    data-aos-duration=\"5000\"\n                    data-aos-anchor-placement=\"top\"\n                    className=\"container-fluid brighten\" id=\"logo\">\n\n                    <LazyLoadImage \n                        className=\"img-main clock\"\n                        src={process.env.PUBLIC_URL + \"/images/gravy_logo.png\"}\n                        alt=\"Gravy VHS Logo\" />\n\n                </div>\n                \n            </div>\n            \n        </Link>\n\n        </div>\n\n        </Router>\n        )          \n    }\n}\n\nexport default Glitch;","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport \"./style.css\";\n\nfunction Intro() {\n    return(\n        <Router>\n        \n        <div>\n            \n            <div id=\"introduction\"/>\n            \n            <br />\n            <br />\n            <br />\n            \n            <div\n                data-aos=\"zoom-in\"\n                data-aos-delay=\"100\"\n                data-aos-duration=\"3000\"\n                data-aos-anchor-placement=\"center\"\n                className=\"container lil-margin\">\n            \n                <div\n                    data-aos=\"flip-right\"\n                    data-aos-delay=\"400\"\n                    data-aos-duration=\"2000\"\n                    data-aos-anchor-placement=\"center\">\n                    \n                    <div className=\"intro-header\"><b>websites.</b></div>\n            \n                    <div\n                    data-aos=\"flip-left\"\n                    data-aos-delay=\"200\"\n                    data-aos-duration=\"2000\"\n                    data-aos-anchor-placement=\"center\">\n            \n                    <div className=\"column-words justify\">\n                        Welcome to the Web Development and Design website for <b><u>Grävy Design Co.</u></b> where our number one priority is aesthetic design. We've realized client projects in all digital realms including web development, illustration, product design, and audio production. We are prepared for the challenges of any job we take on with our unique style set to your specifications.\n                    </div>\n                </div>\n                    \n                    <div className=\"column-words justify\">\n                        Our most comprehensive designs are featured in our web development projects. We offer mobile-first, full stack web development focused on UX/UI design. This website serves as an example of a PWA Optimized website and we are proud to offer this feature for your fully integrated web app. Whether you need a beautiful one-page site or fully functional GUI enhanced database software, we got you covered. Click <b><Link to=\"#featured\">here</Link></b> to see some of our favorite web projects.\n                    </div>\n                </div>\n\n                <LazyLoadImage \n                    className=\"img-audit center\"\n                    src={process.env.PUBLIC_URL + \"/images/audit.png\"}\n                    alt=\"PWA Audit\" />            \n            \n                <br /><br /><br /><br />\n                \n                <div\n                    data-aos=\"flip-left\"\n                    data-aos-delay=\"600\"\n                    data-aos-duration=\"2000\"\n                    data-aos-anchor-placement=\"center\">\n            \n                    <div className=\"intro-header clients\"><b>clients.</b></div>\n                    \n                    <div\n                    data-aos=\"flip-right\"\n                    data-aos-delay=\"400\"\n                    data-aos-duration=\"2000\"\n                    data-aos-anchor-placement=\"center\">\n            \n                        <div className=\"column-words justify clients-text\" id=\"clients\">\n                            Grävy Design Co. was founded in Houston, TX and we have worked to execute the vision of clients from businesses of all sizes to Houston's premiere rap legends on cover art, promotional materials, and creative direction on music videos. Creative Director and Owner, Andy Richard, began his design career working on apparel for small businesses and grew to work on projects for large corporations and businesses such as Kinder-Morgan, WCA Waste Corporation, Republic Services, and Texan Wire Wheels. Since our 2019 launch we have worked with both signed and independent artists from Houston to New York.\n                        </div>\n            \n                    </div>\n            \n                </div>\n                    \n                <br/>\n                <br/>\n\n            </div>\n\n            <br /><br />\n\n        </div>\n        \n        </Router>\n    )\n}\n\nexport default Intro;","import React from 'react';\nimport Glitch from \"./components/glitch/Glitch\";\nimport Intro from \"./components/intro/Intro\";\nimport './App.css';\n\nfunction App() {\n        \n    // Look what I did, ma! This will make the page refresh always go to top.... most of the time!\n    document.addEventListener(\"DOMContentLoaded\", function(){\n        window.location.hash=\"\"\n        document.documentElement.scrollTop = 0  // For Chrome, Firefox, IE and Opera\n        document.body.scrollTop = 0 // For Safari\n    })\n\n    return (\n        <div>\n            <Glitch />\n            <Intro />\n        </div>\n    )\n}\n      \n\n\nexport default App;\n\n\n","import React from \"react\";\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport \"../src/App.css\";\n\nfunction Footer() {\nreturn (\n    <div className=\"sFooter gray\" id=\"footer\">\n\n        <div><a href=\"/\"><u><i className=\"material-icons\">keyboard_arrow_up</i></u></a></div>\n\n        <a href=\"https://github.com/gravyhtx\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <LazyLoadImage\n                className=\"socials brighten\"\n                src={process.env.PUBLIC_URL + \"/images/gh.png\"}\n                alt=\"GitHub\" />\n        </a>\n\n        <a href=\"https://www.behance.net/gravyhtx\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <LazyLoadImage\n                className=\"socials brighten\"\n                src={process.env.PUBLIC_URL + \"/images/be.png\"}\n                alt=\"Behance\" />\n        </a>\n\n        <a href=\"https://www.linkedin.com/in/andrewrichard88/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <LazyLoadImage\n                className=\"socials brighten\"\n                src={process.env.PUBLIC_URL + \"/images/ln.png\"}\n                alt=\"LinkedIn\" />\n        </a>\n        <a href=\"https://www.instagram.com/gravyhtx\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <LazyLoadImage\n                className=\"socials brighten\"\n                src={process.env.PUBLIC_URL + \"/images/in.png\"}\n                alt=\"Instagram\" />\n        </a>\n\n        <br />\n\n    </div>\n    )\n}\n\nexport default Footer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Footer from './Footer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('footer')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}